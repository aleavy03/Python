import re

def validate_email(email):
    """
    Validates whether the given string is a valid email address.
    
    Args:
        email (str): The email address to validate.
    
    Returns:
        bool: True if the email is valid, False otherwise.
    """
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$'
    return bool(re.match(pattern, email))

def extract_and_validate_emails(text):
    """
    Extracts email addresses from text and validates them.
    
    Args:
        text (str): The input text containing potential email addresses.
    
    Returns:
        list: A list of tuples with the email address and its validity.
    """
    email_pattern = r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z]{2,}'
    emails = re.findall(email_pattern, text)
    return [(email, validate_email(email)) for email in emails]

# Test text
test_text = """
Please contact us at info@example.com for further information. 
You can also send a message to support_123@my-domain.co.uk or 
john.doe@invalid-domain. These are the emails to reach out to.
"""

# Extract and validate emails
results = extract_and_validate_emails(test_text)

# Print results
print("Email Validation Results from Test Text:")
for email, is_valid in results:
    print(f"{email}: {'Valid' if is_valid else 'Invalid'}")

# User input for email validation
user_email = input("\nEnter an email address to check its validity: ")
if validate_email(user_email):
    print(f"The email address '{user_email}' is valid.")
else:
    print(f"The email address '{user_email}' is invalid.")
